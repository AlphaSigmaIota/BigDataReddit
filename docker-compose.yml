# Autor: AS
# Dieses docker-compose.xml File wurde aus den von den jeweiligen Community-
# membern zur Verfügung gestellten docker-compose.yml Files zusammen gestellt
# und entsprechend um projektspezifische Konfigurationen erweitert.

version: "3"

services:
# Der Kafka-Broker speichert, empfängt und sendet Nachrichten, und stellt die
# robuste und effiziente Kommunikation zwischen Produzenten und Konsumenten sicher.
  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka-broker
    ports:
      - 9092:9092
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes

# Die Hadoop Namenode verwaltet die Dateisystem-Metadaten für HDFS, hält die
# Verzeichnisstruktur aller Dateien im System aufrecht und reguliert den Zugriff
# auf diese Dateien durch die Clients.
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./hadoop/data:/opt/hadoop
    environment:
      - CLUSTER_NAME=bigdata_cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop/hadoop.env

# Die Hadoop Datanode speichert Daten in HDFS (Hadoop Distributed File System)
# und verarbeitet die Anfragen vom Namenode.
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop/hadoop.env
    depends_on:
      - namenode

# Spark Master Instanz, sie koordiniert und verteilt Aufgaben an die Spark
# Worker und ist für das Ressourcenmanagement des Clusters verantwortlich.
  spark-master:
    image: bde2020/spark-master:3.2.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - HADOOP_CONF_DIR=/etc/hadoop
      - SPARK_HOME=/spark
    volumes:
      - ./hadoop/data:/opt/hadoop
    depends_on:
      - namenode

# Spark Worker Instanz, sie führt die ihm vom Master zugewiesenen Aufgaben
# aus und verwaltet die Daten- und Rechenressourcen seiner lokalen Maschine.
  spark-worker-1:
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

# Jupyter Notebook als Schnittstelle zum Q&A System
  jupyter-notebook:
      image: jupyter/pyspark-notebook
      container_name: jupyter
      ports:
        - "8888:8888"
      depends_on:
        - spark-master
      volumes:
        - ./jupyter/data:/home/jovyan/work
      environment:
        - "SPARK_MASTER=spark://spark-master:7077"

volumes:
  hadoop_namenode:
  hadoop_datanode:
  kafka_data:
    driver: local

# Die Tools werden alle in dem Netzwerk "bigdatanetwork" betrieben,
# damit wird der gegenseitige Zugriff erleichtert.
networks:
  default:
    external:
      name: bigdatanetwork